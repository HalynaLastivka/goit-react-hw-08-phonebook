{"version":3,"file":"static/js/432.3689f948.chunk.js","mappings":"2RAyHA,UA1GqB,WACnB,OAKIA,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAETE,GAAWC,EAAAA,EAAAA,MAQjB,OACE,SAAC,KAAD,CACEC,KAAK,IACLC,OAAO,MACPC,QAASC,EACTC,SAAS,YACTC,WAAW,aACXC,OAAO,QANT,UAQE,iBAAMC,SAAUb,GAfH,SAAAc,GACfC,QAAQC,IAAI,SACZZ,GAASa,EAAAA,EAAAA,IAAcH,IACvBb,GACD,IAWG,UACE,UAAC,KAAD,CACEiB,GAAG,WACHC,YAAU,EACVC,SAAS,QACTC,QAAQ,OACRC,WAAW,SACXC,eAAe,gBACfC,cAAc,SACdC,OAAO,SACPC,QAAQ,OACRC,IAAI,MACJpB,OAAO,iBACPqB,UAAU,MACVC,EAAE,IACFC,GAAG,UACHC,QAAQ,KACRC,GAAG,KAhBL,WAkBE,UAAC,IAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,IAAD,CAAWC,EAAE,IAAIC,MAAM,OAAvB,SAA8B,YAG9B,SAAC,EAAAC,GAAD,gBACEC,GAAG,aACHR,GAAG,QACHvB,OAAO,MACPgC,YAAY,OACZH,MAAO,IACHrC,EAAS,QAAS,CAAEyC,UAAU,KANpC,IAOEC,KAAK,WAGNvC,EAAOwC,QACN,SAAC,KAAD,UAAkB,2BAGtB,UAAC,IAAD,CAAOT,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,IAAD,CAAWC,EAAE,IAAIC,MAAM,OAAvB,SAA8B,WAG9B,SAAC,EAAAC,GAAD,gBACEC,GAAG,aACHR,GAAG,QACHvB,OAAO,MACPgC,YAAY,OACZH,MAAO,IACHrC,EAAS,OAAQ,CAAEyC,UAAU,KANnC,IAOEC,KAAK,UAENvC,EAAOwC,QACN,SAAC,KAAD,UAAkB,0BAItB,UAAC,IAAD,CAAOT,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,IAAD,CAAWC,EAAE,IAAIC,MAAM,OAAvB,SAA8B,eAG9B,SAAC,EAAAC,GAAD,gBACEC,GAAG,aACHR,GAAG,QACHvB,OAAO,MACPgC,YAAY,OACZH,MAAO,IACHrC,EAAS,WAAY,CAAEyC,UAAU,EAAMG,UAAW,KANxD,IAOEF,KAAK,cAENvC,EAAO0C,WACN,SAAC,KAAD,UAAkB,+BAItB,SAAC,IAAD,CAAQC,YAAY,aAAaJ,KAAK,SAAtC,SAA+C,kBAOxD,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/authReducer';\nimport {\n  Box,\n  FormControl,\n  Button,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Stack,\n} from '@chakra-ui/react';\nimport image from '../img/main-bg.jpg';\n\nconst RegisterPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    console.log('hello');\n    dispatch(registerThunk(data));\n    reset();\n  };\n\n  return (\n    <Box\n      flex=\"3\"\n      border=\"2px\"\n      bgImage={image}\n      bgRepeat=\"no-repeat\"\n      bgPosition=\"top center\"\n      bgSize=\"cover\"\n    >\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl\n          as=\"fieldset\"\n          isRequired\n          maxWidth=\"400px\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          flexDirection=\"column\"\n          margin=\"0 auto\"\n          padding=\"20px\"\n          gap=\"5px\"\n          border=\"2px solid gray\"\n          boxShadow=\"2xl\"\n          p=\"4\"\n          bg=\"#a6c9a6\"\n          rounded=\"md\"\n          mt=\"20\"\n        >\n          <Stack direction=\"row\" spacing={4}>\n            <FormLabel m=\"0\" width=\"90px\">\n              Email:\n            </FormLabel>\n            <Input\n              id=\"unique-id1\"\n              bg=\"white\"\n              border=\"1px\"\n              borderColor=\"gray\"\n              width={80}\n              {...register('email', { required: true })}\n              type=\"email\"\n            />\n\n            {errors.email && (\n              <FormErrorMessage>Email is required.</FormErrorMessage>\n            )}\n          </Stack>\n          <Stack direction=\"row\" spacing={4}>\n            <FormLabel m=\"0\" width=\"90px\">\n              Name:\n            </FormLabel>\n            <Input\n              id=\"unique-id2\"\n              bg=\"white\"\n              border=\"1px\"\n              borderColor=\"gray\"\n              width={80}\n              {...register('name', { required: true })}\n              type=\"text\"\n            />\n            {errors.email && (\n              <FormErrorMessage>Name is required.</FormErrorMessage>\n            )}\n          </Stack>\n\n          <Stack direction=\"row\" spacing={4}>\n            <FormLabel m=\"0\" width=\"90px\">\n              Password:\n            </FormLabel>\n            <Input\n              id=\"unique-id3\"\n              bg=\"white\"\n              border=\"1px\"\n              borderColor=\"gray\"\n              width={80}\n              {...register('password', { required: true, minLength: 7 })}\n              type=\"password\"\n            />\n            {errors.password && (\n              <FormErrorMessage>This field is required</FormErrorMessage>\n            )}\n          </Stack>\n\n          <Button colorScheme=\"blackAlpha\" type=\"submit\">\n            Sign Up\n          </Button>\n        </FormControl>\n      </form>\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","flex","border","bgImage","image","bgRepeat","bgPosition","bgSize","onSubmit","data","console","log","registerThunk","as","isRequired","maxWidth","display","alignItems","justifyContent","flexDirection","margin","padding","gap","boxShadow","p","bg","rounded","mt","direction","spacing","m","width","I","id","borderColor","required","type","email","minLength","password","colorScheme"],"sourceRoot":""}